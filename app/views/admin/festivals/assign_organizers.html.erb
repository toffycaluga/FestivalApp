<h1>Asignar Organizadores</h1>

<%= form_tag(processassign_organizers_admin_festivals_path(@festival), method: :post) do %>
  <div class="form-group">
  <label for="festival_id">Seleccionar Festival:</label>
  <%= collection_select(nil, :festival_id, @festivals, :id, :name, { prompt: 'Seleccionar festival' }, { class: 'form-select select2 select2-festival' })  %>
  
</div>

  <div class="form-group">
    <label for="organizer_ids">Seleccionar Organizadores:</label>
    <input type="text" id="myInput" placeholder="Buscar organizadores...">
    <%= collection_select(nil, :organizer_ids, User.all, :id, :email, { prompt: 'Seleccionar organizadores' }, { class: 'form-select select2 select2-organizer', id: 'mySelect' }) %>
  </div>
  <div class="form-group text-end">
    <%= submit_tag 'Asignar organizadores', class: 'btn btn-primary' %>
  </div>
<% end %>









<script>
// Obtener el campo de entrada y el menú desplegable
var input = document.getElementById('myInput');
var select = document.getElementById('mySelect');

// Agregar un controlador de eventos para el evento keyup en el campo de entrada
input.addEventListener('keyup', function() {
  // Obtener el valor del campo de entrada y convertirlo a mayúsculas
  var filter = input.value.toUpperCase();
  // console.log(filter)
  // Obtener todas las opciones del menú desplegable
  var options = select.getElementsByTagName('option');

  // Recorrer todas las opciones del menú desplegable
  for (var i = 0; i < options.length; i++) {
    // Obtener el texto de la opción actual
    var txtValue = options[i].textContent || options[i].innerText;

    // Si el texto de la opción coincide con el filtro, mostrar la opción, de lo contrario, ocultarla
    if (txtValue.toUpperCase().indexOf(filter) > -1) {
      options[i].style.display = '';
    } else {
      options[i].style.display = 'none';
    }
  }
});
</script>
